<?xml version="1.0"?>
<project name="bvira" default="build" basedir=".">

    <!-- properties overridden by cruisecontrol -->
    <property name="release.label" value="Dev"/>

    <property name="jar.name" value="bvira.jar"/>

    <property name="src.dir" location="src"/>
    <property name="test.dir" location="test"/>

    <property name="build.dir" location="build"/>
    <property name="dist.dir" value="${build.dir}/dist"/>

    <property name="jar.dir" location="${build.dir}/jar"/>
    <property name="manifest.file" value="${jar.dir}/MANIFEST.MF"/>

    <property name="test.reports.dir" location="${build.dir}/test-reports"/>

    <property name="jetty.host" value="0.0.0.0"/>
    <property name="jetty.port" value="8080"/>

    <property name="reports.dir" location="${build.dir}"/>
    <property name="instrumented.dir" value="${build.dir}/instrumented"/>


    <property name="findbugs.home" value="${basedir}/tools/findbugs-1.3.8"/>

    <property name="cobertura.dir" value="${basedir}/tools/cobertura-1.9.2"/>

    <path id="classpath">
        <fileset dir="lib">
            <include name="build/*.jar"/>
            <include name="run/*.jar"/>
            <include name="test/*.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">
        <fileset dir="${jar.dir}" includes="*.jar"/>
        <path refid="classpath"/>
        <path location="web/components"/>
    </path>

    <path id="cobertura.class.path">
        <fileset dir="${cobertura.dir}">
            <include name="cobertura.jar"/>
            <include name="lib/**/*.jar"/>
        </fileset>
    </path>

    <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
        <classpath>
            <fileset dir="${findbugs.home}/lib" includes="*.jar"/>
        </classpath>
    </taskdef>

    <taskdef classpathref="cobertura.class.path" resource="tasks.properties"/>

    <target name="build" depends="clean, compile, test, package" description="Runs the full build"/>

    <target name="clean" description="Deletes all the build directories.">
        <delete dir="${build.dir}"/>
    </target>

    <macrodef name="compile.source">

        <attribute name="src.dir"/>
        <attribute name="dest.dir"/>
        <attribute name="jar.name"/>
        <attribute name="manifest"/>
        <attribute name="classes.dir" default="@{dest.dir}/classes"/>
        <attribute name="classpathref" default="classpath"/>
        <attribute name="debug" default="yes"/>

        <sequential>

            <mkdir dir="@{dest.dir}"/>
            <mkdir dir="@{classes.dir}"/>

            <javac srcdir="@{src.dir}" destdir="@{classes.dir}" classpathref="@{classpathref}"
                   debug="@{debug}" target="1.5"/>

            <copy todir="@{classes.dir}" includeemptydirs="no">
                <fileset dir="@{src.dir}" excludes="**/*.java"/>
            </copy>

            <jar destfile="@{dest.dir}/@{jar.name}" basedir="@{classes.dir}" manifest="@{manifest}"/>

            <delete dir="@{classes.dir}"/>

        </sequential>

    </macrodef>

    <macrodef name="unit.test">

        <attribute name="test.dir"/>

        <sequential>
            <mkdir dir="${test.reports.dir}"/>
            <mkdir dir="${instrumented.dir}"/>

            <junit fork="yes" forkmode="once" failureproperty="test.failure">
                <jvmarg value="-Xmx128M"/>
                <classpath>
                    <fileset dir="${instrumented.dir}" includes="*.jar"/>
                    <path refid="test.classpath"/>
                    <path refid="cobertura.class.path"/>
                </classpath>

                <formatter type="xml"/>
                <sysproperty key="net.sourceforge.cobertura.datafile" file="${build.dir}/cobertura.ser"/>

                <batchtest todir="${test.reports.dir}" if="testcase">
                    <fileset dir="@{test.dir}">
                        <include name="**/${testcase}.java"/>
                    </fileset>
                </batchtest>
                <batchtest todir="${test.reports.dir}" unless="testcase">
                    <fileset dir="@{test.dir}">
                        <include name="**/*Tests.java"/>
                    </fileset>
                </batchtest>
            </junit>

            <fail message="Test(s) failed" if="test.failure"/>

            <echo message="Test(s) passed"/>

        </sequential>

    </macrodef>

    <target name="compile" description="Compiles the source">
        <mkdir dir="${jar.dir}"/>
        <manifest file="${manifest.file}">
            <attribute name="Built-By" value="${user.name}"/>
            <section name="bvira">
                <attribute name="Specification-Title" value="${ant.project.name} web application"/>
                <attribute name="Specification-Version" value="${release.label}"/>
                <attribute name="Specification-Vendor" value="ThoughtWorks Inc."/>
                <attribute name="Implementation-Title" value="common"/>
                <attribute name="Implementation-Version" value="${release.label}"/>
                <attribute name="Implementation-Vendor" value="ThoughtWorks Inc."/>
            </section>
        </manifest>
        <compile.source src.dir="${src.dir}" dest.dir="${jar.dir}"
                        jar.name="${ant.project.name}.jar" manifest="${manifest.file}"/>
        <compile.source src.dir="${test.dir}" dest.dir="${jar.dir}"
                        jar.name="${ant.project.name}.test.jar" manifest="${manifest.file}"
                        classpathref="test.classpath"/>
    </target>

    <target name="test" description="Runs JUnit tests" unless="notests">
        <unit.test test.dir="${test.dir}"/>
    </target>

    <target name="package">
        <mkdir dir="${dist.dir}"/>
        <war destfile="${dist.dir}/bvira.war" webxml="web/WEB-INF/web.xml" manifest="${manifest.file}">
            <lib dir="lib/run"/>
            <lib dir="${jar.dir}">
                <include name="*.jar"/>
                <exclude name="*.test.jar"/>
            </lib>
            <fileset dir="web" casesensitive="yes">
                <exclude name="WEB-INF/web.xml"/>
            </fileset>
        </war>
    </target>

    <target name="jetty" depends="clean, compile, jetty-server" description="Builds and runs jetty without testing"/>

    <target name="jetty-server" description="Run the JETTY web server">
        <java classname="bvira.webserver.WebServer" fork="yes">
            <sysproperty key="jetty.host" value="${jetty.host}"/>
            <sysproperty key="jetty.port" value="${jetty.port}"/>
            <classpath>
                <fileset dir="${jar.dir}" includes="*.jar"/>
                <fileset dir="lib" includes="**/*.jar"/>
                <path location="web/components"/>
            </classpath>
        </java>
    </target>


    <target name="instrument" depends="compile">
        <mkdir dir="${instrumented.dir}"/>
        <cobertura-instrument todir="${instrumented.dir}" datafile="${build.dir}/cobertura.ser">
            <fileset dir="${jar.dir}">
                <include name="${jar.name}"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="coverage" depends="instrument, test">
        <cobertura-report format="html" destdir="${reports.dir}/html/cobertura"
                          datafile="${build.dir}/cobertura.ser">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
        <cobertura-report format="xml" destdir="${reports.dir}/xml/cobertura"
                          datafile="${build.dir}/cobertura.ser">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>


    <target name="findbugs" depends="compile">
        <mkdir dir="${reports.dir}/xml"/>
        <findbugs home="${findbugs.home}"
                  failOnError="true"
                  output="xml"
                  outputFile="${reports.dir}/xml/findbugs.xml">
            <auxClasspath>
                <path refid="test.classpath"/>
            </auxClasspath>
            <sourcePath path="${basedir}/src/"/>
            <class location="${jar.dir}/${jar.name}"/>
        </findbugs>
    </target>

    <target name="ci" depends="coverage, findbugs">
    </target>
</project>
